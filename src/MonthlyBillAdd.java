
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class MonthlyBillAdd extends javax.swing.JFrame {

        Connection conn;
   Statement statement;
   ResultSet resultSet,resultSet2,resultSet3,resultSet4;
   ResultSetMetaData resultsetMetaData;
    public MonthlyBillAdd() {
        initComponents();
        OracleConnection OC=new OracleConnection();
        String[] stringArray = OC.connection();


        try{
           conn=DriverManager.getConnection(stringArray[0],stringArray[1],stringArray[2]);
            if(conn!=null)
            {
                
                System.out.println("Connection Sucessful in Monthly Bill Add Interface");
                statement=conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            } 
        }catch(SQLException e){
            System.out.println("Connection failed");
        }
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE );
        showData();
    }
    void showData()
    {
        DefaultTableModel model;
        model=(DefaultTableModel) monthlyBill.getModel(); 
        String query=String.format("select S_ID from Bills where Hall_Bill>0");
            try {
                resultSet = statement.executeQuery(query);
                String stuid,name;
                while(resultSet.next())
                {
                       stuid=resultSet.getString("S_ID");
                       model.insertRow(model.getRowCount(),new Object[]{stuid,200,false});
                }
            } catch (SQLException ex) {
                Logger.getLogger(MonthlyBillAdd.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        monthlyBill = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        addMonthlyBillBtn = new javax.swing.JLabel();
        addtofine = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(874, 424));

        jPanel1.setBackground(new java.awt.Color(27, 124, 161));
        jPanel1.setLayout(null);

        monthlyBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Fine Amount", "Assign"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        monthlyBill.setGridColor(new java.awt.Color(255, 255, 255));
        monthlyBill.setRowHeight(30);
        jScrollPane1.setViewportView(monthlyBill);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(40, 170, 772, 180);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Fine Table");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(50, 140, 120, 20);

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Add monthly Bill for All Student");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(50, 80, 300, 30);

        addMonthlyBillBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/addmonthlyBill.png"))); // NOI18N
        addMonthlyBillBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addMonthlyBillBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMonthlyBillBtnMouseClicked(evt);
            }
        });
        jPanel1.add(addMonthlyBillBtn);
        addMonthlyBillBtn.setBounds(350, 70, 120, 60);

        addtofine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/addMealCose.png"))); // NOI18N
        addtofine.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addtofine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addtofineMouseClicked(evt);
            }
        });
        jPanel1.add(addtofine);
        addtofine.setBounds(380, 370, 70, 60);

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Add Fine");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(290, 390, 90, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 874, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addMonthlyBillBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMonthlyBillBtnMouseClicked
       //   Adding Monthly Bill to all Student
        CallableStatement cstmt = null;
        try {
             String SQL = "{call addbills}";
             cstmt = conn.prepareCall (SQL);
             //cstmt.setString(1,room_noo);
             //cstmt.setInt(2,count_seat);
             System.out.println("Executing Add bills procedure..." );
             cstmt.execute();
            }
        catch (SQLException e) {
   
            }
        finally {
            try {
                cstmt.close();
            } catch (SQLException ex) {
             Logger.getLogger(ManagerInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
         }
    }//GEN-LAST:event_addMonthlyBillBtnMouseClicked

    private void addtofineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addtofineMouseClicked
        int response = JOptionPane.showConfirmDialog(null, "Are you Confirm?", "Confirm",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) { 
        String query=String.format("select count(*) as c from Bills where Hall_Bill>0");
            try {
                resultSet2 = statement.executeQuery(query);
                resultSet2.next();
                int rowcount=resultSet2.getInt("c");
                for(int i=0;i<rowcount;i++)
                {
                    String idd= ((String)monthlyBill.getValueAt(i,0)).toString();
                    Integer fine_amn=((Integer)monthlyBill.getValueAt(i,1));
                    Boolean chk= ((Boolean)monthlyBill.getValueAt(i,2)).booleanValue();
                    if(chk)
                    {
                        String query2=String.format("Select Fine from Bills where S_ID='%s'",idd);
                        resultSet3=statement.executeQuery(query2);
                        resultSet3.next();
                        int fine=resultSet3.getInt("Fine");
                        fine+=fine_amn;
                        String query3=String.format("Update Bills set Fine=%d where S_ID='%s'",fine,idd);
                        resultSet4=statement.executeQuery(query3);
                    }
                }
                JFrame f=new JFrame();  
                JOptionPane.showMessageDialog(f,"Fine Added");
                
            } catch (SQLException ex) {
                Logger.getLogger(MonthlyBillAdd.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }
          
    }//GEN-LAST:event_addtofineMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonthlyBillAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonthlyBillAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonthlyBillAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonthlyBillAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonthlyBillAdd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addMonthlyBillBtn;
    private javax.swing.JLabel addtofine;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable monthlyBill;
    // End of variables declaration//GEN-END:variables
}
